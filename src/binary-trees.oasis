; Based on https://github.com/ivanjovanovic/sicp/blob/master/2.3/2.3-binary-trees.scm

(defn make-tree (entry left right) (vec entry left right))
(defn entry (tree) (index tree 0))
(defn left-branch (tree) (index tree 1))
(defn right-branch (tree) (index tree 2))

(defn element-of-set? (x set)
  (cond ((null? set) false)
        ((= x (entry set)) true)
        ((< x (entry set)) (element-of-set? x (left-branch set)))
        ((> x (entry set)) (element-of-set? x (right-branch set)))))

(null? null)
